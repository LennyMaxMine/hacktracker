rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow anyone to read events
    match /events/{document} {
      allow read: if true;
      allow write: if false; // Only admins can write via approve collection
    }
    
    // Allow authenticated users to submit events to approval queue
    match /approve/{document} {
      allow read: if isAdmin();
      allow create: if request.auth != null;
      allow update: if request.auth != null && resource.data.user == request.auth.token.email;
      allow delete: if isAdmin();
    }
    
    // Allow users to read their own rejected events, and edit them
    match /rejected/{document} {
      allow read: if request.auth != null && 
                    (isAdmin() || resource.data.user == request.auth.token.email);
      allow create, update: if isAdmin();
      allow delete: if isAdmin() || (request.auth != null && resource.data.user == request.auth.token.email);
    }
    
    // Allow everyone to read approved organizations
    match /organizations/{document} {
      allow read: if true;
      allow write: if isAdmin(); // Only admins can write approved organizations
    }
    
    // Allow authenticated users to submit organizations to approval queue
    match /organizations-pending/{document} {
      allow read: if isAdmin();
      allow create: if request.auth != null;
      allow update: if request.auth != null && resource.data.user == request.auth.token.email;
      allow delete: if isAdmin();
    }
    
    // Allow admins to manage rejected organizations
    match /organizations-rejected/{document} {
      allow read: if isAdmin();
      allow create, update, delete: if isAdmin();
    }
    
    // Allow admins to hide events from everyone
    match /hidden/{document} {
      allow read: if true; // Everyone can read to know which events are hidden
      allow write: if isAdmin(); // Only admins can hide/unhide events
    }
    
    // Allow everyone to read tags, authenticated users to create new tags
    match /tags/{document} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if false; // Prevent modification/deletion of existing tags
    }
    
    // Allow users to manage their own profiles
    match /profiles/{email} {
      allow read, write, delete: if request.auth != null && request.auth.token.email == email;
    }
    
    // Protect admin collection - only readable by admins themselves
    match /admins/{email} {
      allow read: if request.auth != null && request.auth.token.email == email;
      allow write: if false; // Prevent any client-side modifications
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/admins/$(request.auth.token.email)) &&
             get(/databases/$(database)/documents/admins/$(request.auth.token.email)).data.isAdmin == true;
    }
  }
} 